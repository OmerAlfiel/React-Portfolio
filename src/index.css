@tailwind base;
@tailwind components;
@tailwind utilities;


@layer base {
  :root {
    /* Modern architect-inspired color palette */
    --background: 210 30% 98%; /* Light blue-gray background */
    --foreground: 210 50% 15%; /* Dark blue-gray text */

    --card: 0 0% 100%;
    --card-foreground: 210 50% 15%;

    --popover: 0 0% 100%;
    --popover-foreground: 210 50% 15%;

    --primary: 210 80% 30%; /* Rich blue primary */
    --primary-foreground: 0 0% 100%;

    --secondary: 35 60% 96%; /* Warm beige secondary */
    --secondary-foreground: 35 50% 15%;

    --muted: 210 20% 92%;
    --muted-foreground: 210 20% 40%;

    --accent: 35 80% 50%; /* Gold accent */
    --accent-foreground: 210 50% 15%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 210 30% 85%;
    --input: 210 30% 85%;
    --ring: 210 80% 30%;

    --radius: 0.5rem; /* Slightly more rounded corners */
  }

  .dark {
    --background: 210 50% 8%;
    --foreground: 210 20% 98%;

    --card: 210 40% 10%;
    --card-foreground: 210 20% 98%;

    --popover: 210 40% 10%;
    --popover-foreground: 210 20% 98%;

    --primary: 210 80% 50%;
    --primary-foreground: 0 0% 100%;

    --secondary: 35 30% 15%;
    --secondary-foreground: 35 40% 90%;

    --muted: 210 30% 15%;
    --muted-foreground: 210 20% 70%;

    --accent: 35 80% 50%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 210 40% 20%;
    --input: 210 40% 20%;
    --ring: 210 80% 50%;
  }
  html {
    scroll-behavior: smooth;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  body {
    overflow-y: scroll;
  }
  .scroll-container {
    will-change: transform;
  }

}

/* Add these custom background patterns */
@layer utilities {
  .bg-pattern-grid {
    background-image: linear-gradient(to right, rgba(0,0,0,0.05) 1px, transparent 1px),
                      linear-gradient(to bottom, rgba(0,0,0,0.05) 1px, transparent 1px);
    background-size: 24px 24px;
  }
  
  .bg-pattern-dots {
    background-image: radial-gradient(circle, rgba(0,0,0,0.1) 1px, transparent 1px);
    background-size: 20px 20px;
  }

  .text-shadow-sm {
    text-shadow: 0 1px 2px rgba(0,0,0,0.1);
  }
  
  .text-shadow {
    text-shadow: 0 2px 4px rgba(0,0,0,0.2);
  }
  .animate-in {
    animation: fadeIn 0.5s ease-out;
    will-change: transform, opacity;
  }
  
  /* Improved project card styles */
  .project-card {
    height: auto;
    display: flex;
    flex-direction: column;
    isolation: isolate;
    transform-origin: center bottom;
    opacity: 0;
    transform: translateY(20px);
  }

  .project-card.animate {
    animation: cardAppear 0.6s cubic-bezier(0.22, 1, 0.36, 1) forwards;
  }

  .project-card.filter-exit {
    animation: cardExit 0.4s ease-in forwards;
  }
  
  .project-card.filter-enter {
    animation: cardEnter 0.5s cubic-bezier(0.22, 1, 0.36, 1) forwards;
  }

  /* Project card content styles */
  .project-card-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .image-gallery-item {
    animation: slideIn 0.3s ease-out forwards;
    animation-delay: calc(var(--index) * 0.05s);
  }
  
  .modal-image {
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .modal-image.loaded {
    opacity: 1;
  }

  /* Improve gallery image transitions */
  .gallery-image {
    opacity: 0;
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
    will-change: opacity, transform;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  }
  
  .gallery-loader {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: theme('colors.muted.DEFAULT');
    z-index: 1;
    transition: opacity 0.3s ease-in-out;
  }
  
  .thumbnail-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
    gap: 0.5rem;
    contain: content;
  }
  
  /* Fixed gallery layout structure */
  .gallery-container {
    display: flex;
    flex-direction: column;
    height: calc(100vh - 100px);
    max-height: 800px;
  }
  
  .gallery-layout {
    display: flex;
    flex-direction: column;
    flex: 1;
    overflow: hidden;
  }
  
  .gallery-main-image {
    flex-shrink: 0;
  }
  
  .project-description {
    flex-shrink: 0;
  }
  
  /* Improved scrollbars */
  .scrollbar-thin {
    scrollbar-width: thin;
    scrollbar-color: rgba(0, 0, 0, 0.2) transparent;
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
    scrollbar-gutter: stable;
    overscroll-behavior-x: contain;
    scroll-padding: 0 20px;
  }
  
  .scrollbar-thin::-webkit-scrollbar {
    height: 6px;
    width: 6px;
  }
  
  .scrollbar-thin::-webkit-scrollbar-track {
    background: transparent;
  }
  
  .scrollbar-thin::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.2);
    border-radius: 6px;
  }
  
  /* Optimized thumbnail container */
  .thumbnail-container {
    position: relative;
    overflow: hidden;
    flex-shrink: 0;
  }
  
  .thumbnail-container::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    width: 40px;
    background: linear-gradient(to right, transparent, theme('colors.background') 80%);
    pointer-events: none;
    z-index: 1;
    opacity: 0.8;
  }

  .gallery-image {
    transition: opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1), 
                transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  /* Add this to your existing image transitions */
  img.transition-in {
    animation: imageZoomIn 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .fullscreen-container {
    animation: enterFullscreen 0.4s cubic-bezier(0.16, 1, 0.3, 1);
  }
  .gallery-main-image {
    position: relative;
  }
  
  .gallery-main-image::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 80px;
    background: linear-gradient(to bottom, rgba(0,0,0,0.3), transparent);
    pointer-events: none;
    z-index: 10;
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
  }
  .animate-dialog-show {
    animation: dialogShow 0.4s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }
  
  .animate-dialog-hide {
    animation: dialogHide 0.3s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }
  
  /* Dialog backdrop animation */
  .dialog-backdrop-enter {
    animation: backdropEnter 0.3s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }
  
  .dialog-backdrop-exit {
    animation: backdropExit 0.2s cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }

  /* Staggered animation delay for cards */
  .project-card:nth-child(1) { animation-delay: 0.05s; }
  .project-card:nth-child(2) { animation-delay: 0.1s; }
  .project-card:nth-child(3) { animation-delay: 0.15s; }
  .project-card:nth-child(4) { animation-delay: 0.2s; }
  .project-card:nth-child(5) { animation-delay: 0.25s; }
  .project-card:nth-child(6) { animation-delay: 0.3s; }
  .project-card:nth-child(7) { animation-delay: 0.35s; }
  .project-card:nth-child(8) { animation-delay: 0.4s; }
  .project-card:nth-child(9) { animation-delay: 0.45s; }
}

/* Keep only necessary keyframes */
@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(30px);
    filter: blur(2px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
    filter: blur(0);
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes cardAppear {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes cardExit {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  100% {
    opacity: 0;
    transform: scale(0.95);
  }
}

@keyframes cardEnter {
  0% {
    opacity: 0;
    transform: scale(0.95);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes imageZoomIn {
  from {
    opacity: 0;
    transform: scale(1.08);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Dialog animation keyframes */
@keyframes dialogShow {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes dialogHide {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
}

@keyframes backdropEnter {
  from {
    opacity: 0;
    backdrop-filter: blur(0);
  }
  to {
    opacity: 1;
    backdrop-filter: blur(4px);
  }
}

@keyframes backdropExit {
  from {
    opacity: 1;
    backdrop-filter: blur(4px);
  }
  to {
    opacity: 0;
    backdrop-filter: blur(0);
  }
}